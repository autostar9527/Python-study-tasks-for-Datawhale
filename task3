1.dict字典
定义：dict是dictionary字典的简称。在其它语言中也称为map。使用键-值（key-value）存储，具有极快的查找速度。
创建：
如果用list实现，需要两个list，如下：
names=['Alice','Bruce','Clark']
scores=[99,60,87]
而用dict，只需要一个即可：
>>>d={'Alice':99,'Bob':60,'Clark':87}
>>>d['Alice']
99
字典的方法：
是先在字典的索引表里（比如部首表）查这个字对应的页码，然后直接翻页到该页，找到这个字。无论找哪个字，这种查找速度都非常快，不会随着字典大小的增加而变慢。
2.集合
集合类似于列表，但是每个元素必须是独一无二的。
特性
1. 集合中只能存储不可变的对象
2. 集合中存储的对象是无序的（不是按照元素的插入顺序来保存的）
3. 集合中不能出现重复的元素
创建
使用 set() 函数来创建集合
s = set() # 空集合
# 可以通过set()来将序列和字典转换为集合
s = set([1,2,3,4,5,7,8,9,10,11,12])
方法
# 创建集合
s = {'a','b',1,3,4,5,6}
# 使用in和not in来检查集合中的元素
# print('c' in s)
# 使用len()来获取集合中元素的数量
# print(len(s))
# add() 向集合中添加元素
s.add(10)
s.add(30)
# update() 将一个集合中的元素添加到当前集合中
#   update()可以传递序列或字典作为参数，字典只会使用键
s2 = set('hello')
s.update(s2)
s.update((10,20,30,40,50))
s.update({10:'ab',20:'bc',100:'cd',1000:'ef'})
# {1, 2, 3, 100, 40, 'o', 10, 1000, 'a', 'h', 'b', 'l', 20, 50, 'e', 30}
# pop()随机删除并返回一个集合中的元素
# result = s.pop()
# remove()删除集合中的指定元素
s.remove(100)
s.remove(1000)
# clear()清空集合
s.clear()
# copy()对集合进行浅复制
# print(result)
print(s , type(s))
3.判断语句（要求掌握多条件判断）
计算机之所以能做很多自动化的任务，是因为它自己可以做条件判断。
比如输入用户年龄，根据年龄打印不同的内容。
age=20
if age>=18:
    print('your age is',age)
    print('Congraduations!,you are an adult')
    语法： 
  if 条件表达式 :
      代码块
  else :
      代码块
执行流程：
  if-else语句在执行时，先对if后的条件表达式进行求值判断
      如果为True，则执行if后的代码块
      如果为False，则执行else后的代码块
```

if-elif-else语句
```
语法：
  if 条件表达式 :
      代码块
  elif 条件表达式 :
      代码块
  elif 条件表达式 :
      代码块
  elif 条件表达式 :
      代码块
  else :
      代码块
4.三目表达式
条件为真时，是if判断条件，条件假时，是else的判断条件；
5.循环语句
在python中有两种循环，for...in循环，while循环。
循环语句可以使指定的代码块重复指定的次数
循环语句分成两种，while循环 和 for循环
while循环
语法：
  while 条件表达式 :
      代码块
  else :
      代码块
